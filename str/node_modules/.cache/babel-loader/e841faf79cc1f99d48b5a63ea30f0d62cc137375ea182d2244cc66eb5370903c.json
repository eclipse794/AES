{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krasy\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u041A\\u0440\\u0438\\u043F\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0442\\u043E\\u043A\\u043E\\u043B\\u044B\\\\str\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport bigInt from 'big-integer'; // Импортируем библиотеку big-integer\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction isPrime(n) {\n  if (n.lesser(bigInt(2))) {\n    return false;\n  }\n  for (let i = bigInt(2); i.lesserOrEquals(n.sqrt()); i = i.add(1)) {\n    if (n.mod(i).equals(bigInt(0))) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction Up(base, exponent, modulus) {\n  base = base.mod(modulus);\n  let result = bigInt(1);\n  while (exponent.greater(bigInt(0))) {\n    if (exponent.mod(bigInt(2)).equals(bigInt(1))) {\n      result = result.multiply(base).mod(modulus);\n    }\n    base = base.multiply(base).mod(modulus);\n    exponent = exponent.divide(bigInt(2));\n  }\n  return result;\n}\n_c = Up;\nfunction getRandomNumber(min, max) {\n  return bigInt(Math.floor(Math.random() * (max - min + 1)) + min);\n}\n\n// Функция для нахождения расширенного НОД\nfunction extendedGCD(a, b) {\n  if (b.equals(bigInt(0))) {\n    return [a, bigInt(1), bigInt(0)];\n  }\n  const [gcd, x1, y1] = extendedGCD(b, a.mod(b));\n  const x = y1;\n  const y = x1.subtract(a.divide(b).multiply(y1));\n  return [gcd, x, y];\n}\n\n// Функция для нахождения обратного элемента\nfunction modInverse(a, m) {\n  const [gcd, x, y] = extendedGCD(a, m);\n  if (!gcd.equals(bigInt(1))) {\n    throw new Error(\"Обратный элемент не существует\");\n  }\n  return x.mod(m).add(m).mod(m);\n}\n\n// Функция для случайного выбора e\nfunction getRandomE(phi) {\n  let e;\n  do {\n    e = getRandomNumber(bigInt(2), phi.subtract(bigInt(1)));\n  } while (!extendedGCD(e, phi)[0].equals(bigInt(1))); // Убедимся, что e и phi взаимно просты\n  return e;\n}\nconst App = () => {\n  _s();\n  const [p, setP] = useState(bigInt(0));\n  const [q, setQ] = useState(bigInt(0));\n  const [publicKey, setPublicKey] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleGenerateKeys = async () => {\n    setLoading(true);\n    let pValue = bigInt(0);\n    while (!isPrime(pValue)) {\n      pValue = getRandomNumber(bigInt(2).pow(127), bigInt(2).pow(128).subtract(bigInt(1))); // Генерация 128-битного простого числа\n    }\n    let qValue = bigInt(0);\n    while (!isPrime(qValue) || pValue.equals(qValue)) {\n      qValue = getRandomNumber(bigInt(2).pow(127), bigInt(2).pow(128).subtract(bigInt(1)));\n    }\n    const n = pValue.multiply(qValue);\n    const phi = pValue.subtract(bigInt(1)).multiply(qValue.subtract(bigInt(1)));\n    const e = getRandomE(phi); // Случайный выбор e\n    const d = modInverse(e, phi);\n    setP(pValue);\n    setQ(qValue);\n    setPublicKey(`(${e}, ${n})`); // Открытый ключ: (e, n)\n    setPrivateKey(`(${d}, ${n})`); // Закрытый ключ: (d, n)\n\n    // Отправка открытого ключа на сервер\n    try {\n      const response = await fetch('http://localhost:5000/generate_key', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          publicKey: {\n            e: e.toString(),\n            n: n.toString()\n          }\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Ошибка при отправке ключа');\n      }\n      const result = await response.json();\n      console.log('Ответ сервера:', result);\n      console.log(Up(result.public.chipher, d, n));\n    } catch (error) {\n      console.error('Ошибка:', error);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0413\\u0435\\u043D\\u0435\\u0440\\u0430\\u0442\\u043E\\u0440 \\u043A\\u043B\\u044E\\u0447\\u0435\\u0439 RSA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateKeys,\n      disabled: loading,\n      children: loading ? 'Генерация...' : 'Сгенерировать ключи'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u043B\\u0443\\u0447\\u0430\\u0439\\u043D\\u044B\\u0435 \\u043F\\u0440\\u043E\\u0441\\u0442\\u044B\\u0435 \\u0447\\u0438\\u0441\\u043B\\u0430:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"p: \", p.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"q: \", q.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041F\\u0443\\u0431\\u043B\\u0438\\u0447\\u043D\\u044B\\u0439 \\u043A\\u043B\\u044E\\u0447:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: publicKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041F\\u0440\\u0438\\u0432\\u0430\\u0442\\u043D\\u044B\\u0439 \\u043A\\u043B\\u044E\\u0447:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: privateKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"bGFOHaCxjuv6oS676P8C20TseRY=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Up\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","bigInt","jsxDEV","_jsxDEV","isPrime","n","lesser","i","lesserOrEquals","sqrt","add","mod","equals","Up","base","exponent","modulus","result","greater","multiply","divide","_c","getRandomNumber","min","max","Math","floor","random","extendedGCD","a","b","gcd","x1","y1","x","y","subtract","modInverse","m","Error","getRandomE","phi","e","App","_s","p","setP","q","setQ","publicKey","setPublicKey","privateKey","setPrivateKey","loading","setLoading","handleGenerateKeys","pValue","pow","qValue","d","response","fetch","method","headers","body","JSON","stringify","toString","ok","json","console","log","public","chipher","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c2","$RefreshReg$"],"sources":["C:/Users/krasy/OneDrive/Рабочий стол/Криптографические протоколы/str/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport bigInt from 'big-integer'; // Импортируем библиотеку big-integer\n\nfunction isPrime(n) {\n    if (n.lesser(bigInt(2))) {\n        return false;\n    }\n    for (let i = bigInt(2); i.lesserOrEquals(n.sqrt()); i = i.add(1)) {\n        if (n.mod(i).equals(bigInt(0))) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction Up(base, exponent, modulus) {\n    base = base.mod(modulus);\n    let result = bigInt(1);\n\n    while (exponent.greater(bigInt(0))) {\n        if (exponent.mod(bigInt(2)).equals(bigInt(1))) {\n            result = result.multiply(base).mod(modulus);\n        }\n        base = base.multiply(base).mod(modulus);\n        exponent = exponent.divide(bigInt(2));\n    }\n\n    return result;\n}\n\nfunction getRandomNumber(min, max) {\n    return bigInt(Math.floor(Math.random() * (max - min + 1)) + min);\n}\n\n// Функция для нахождения расширенного НОД\nfunction extendedGCD(a, b) {\n    if (b.equals(bigInt(0))) {\n        return [a, bigInt(1), bigInt(0)];\n    }\n    const [gcd, x1, y1] = extendedGCD(b, a.mod(b));\n    const x = y1;\n    const y = x1.subtract(a.divide(b).multiply(y1));\n    return [gcd, x, y];\n}\n\n// Функция для нахождения обратного элемента\nfunction modInverse(a, m) {\n    const [gcd, x, y] = extendedGCD(a, m);\n    if (!gcd.equals(bigInt(1))) {\n        throw new Error(\"Обратный элемент не существует\");\n    }\n    return x.mod(m).add(m).mod(m);\n}\n\n// Функция для случайного выбора e\nfunction getRandomE(phi) {\n    let e;\n    do {\n        e = getRandomNumber(bigInt(2), phi.subtract(bigInt(1)));\n    } while (!extendedGCD(e, phi)[0].equals(bigInt(1))); // Убедимся, что e и phi взаимно просты\n    return e;\n}\n\nconst App = () => {\n    const [p, setP] = useState(bigInt(0));\n    const [q, setQ] = useState(bigInt(0));\n    const [publicKey, setPublicKey] = useState('');\n    const [privateKey, setPrivateKey] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const handleGenerateKeys = async () => {\n        setLoading(true);\n        let pValue = bigInt(0);\n        while (!isPrime(pValue)) {\n            pValue = getRandomNumber(bigInt(2).pow(127), bigInt(2).pow(128).subtract(bigInt(1))); // Генерация 128-битного простого числа\n        }\n        let qValue = bigInt(0);\n        while (!isPrime(qValue) || pValue.equals(qValue)) {\n            qValue = getRandomNumber(bigInt(2).pow(127), bigInt(2).pow(128).subtract(bigInt(1)));\n        }\n\n        const n = pValue.multiply(qValue);\n        const phi = (pValue.subtract(bigInt(1))).multiply(qValue.subtract(bigInt(1)));\n        const e = getRandomE(phi); // Случайный выбор e\n        const d = modInverse(e, phi);\n\n        setP(pValue);\n        setQ(qValue);\n        setPublicKey(`(${e}, ${n})`); // Открытый ключ: (e, n)\n        setPrivateKey(`(${d}, ${n})`); // Закрытый ключ: (d, n)\n\n        // Отправка открытого ключа на сервер\n        try {\n            const response = await fetch('http://localhost:5000/generate_key', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ publicKey: { e: e.toString(), n: n.toString() } }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Ошибка при отправке ключа');\n            }\n\n            const result = await response.json();\n            console.log('Ответ сервера:', result);\n            console.log(Up(result.public.chipher, d, n));\n        } catch (error) {\n            console.error('Ошибка:', error);\n        }\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <h1>Генератор ключей RSA</h1>\n            <button onClick={handleGenerateKeys} disabled={loading}>\n                {loading ? 'Генерация...' : 'Сгенерировать ключи'}\n            </button>\n            <h2>Случайные простые числа:</h2>\n            <p>p: {p.toString()}</p>\n            <p>q: {q.toString()}</p>\n            <h2>Публичный ключ:</h2>\n            <p>{publicKey}</p>\n            <h2>Приватный ключ:</h2>\n            <p>{privateKey}</p>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}