{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krasy\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u041A\\u0440\\u0438\\u043F\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0442\\u043E\\u043A\\u043E\\u043B\\u044B\\\\str\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction isPrime(n) {\n  if (n <= 1) {\n    return false;\n  }\n  for (let i = 2; i <= Math.sqrt(Number(n)); i++) {\n    if (n % BigInt(i) === 0) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction Up(base, exponent, modulus) {\n  base = base % modulus;\n  let result = BigInt(1);\n  while (exponent > 0) {\n    if (exponent % BigInt(2) === BigInt(1)) {\n      result = result * base % modulus;\n    }\n    base = base * base % modulus;\n    exponent = exponent / BigInt(2);\n  }\n  return result;\n}\n_c = Up;\nfunction getRandomNumber(min, max) {\n  return BigInt(Math.floor(Math.random() * (max - min + 1)) + min);\n}\n\n// Функция для нахождения расширенного НОД\nfunction extendedGCD(a, b) {\n  if (b === BigInt(0)) {\n    return [a, BigInt(1), BigInt(0)];\n  }\n  const [gcd, x1, y1] = extendedGCD(b, a % b);\n  const x = y1;\n  const y = x1 - a / b * y1;\n  return [gcd, x, y];\n}\n\n// Функция для нахождения обратного элемента\nfunction modInverse(a, m) {\n  const [gcd, x, y] = extendedGCD(a, m);\n  if (gcd !== BigInt(1)) {\n    throw new Error(\"Обратный элемент не существует\");\n  }\n  return (x % m + m) % m;\n}\n\n// Функция для случайного выбора e\nfunction getRandomE(phi) {\n  let e;\n  do {\n    e = getRandomNumber(BigInt(2), phi - BigInt(1));\n  } while (extendedGCD(e, phi)[0] !== BigInt(1)); // Убедимся, что e и phi взаимно просты\n  return e;\n}\nconst App = () => {\n  _s();\n  const [p, setP] = useState(BigInt(0));\n  const [q, setQ] = useState(BigInt(0));\n  const [publicKey, setPublicKey] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleGenerateKeys = async () => {\n    setLoading(true);\n    let pValue = BigInt(0);\n    while (!isPrime(pValue)) {\n      pValue = getRandomNumber(BigInt(2) ** BigInt(127), BigInt(2) ** BigInt(128) - BigInt(1)); // Генерация 128-битного простого числа\n    }\n    let qValue = BigInt(0);\n    while (!isPrime(qValue) || pValue === qValue) {\n      qValue = getRandomNumber(BigInt(2) ** BigInt(127), BigInt(2) ** BigInt(128) - BigInt(1));\n    }\n    const n = pValue * qValue;\n    const phi = (pValue - BigInt(1)) * (qValue - BigInt(1));\n    const e = getRandomE(phi); // Случайный выбор e\n    const d = modInverse(e, phi);\n    setP(pValue);\n    setQ(qValue);\n    setPublicKey(`(${e}, ${n})`); // Открытый ключ: (e, n)\n    setPrivateKey(`(${d}, ${n})`); // Закрытый ключ: (d, n)\n\n    // Отправка открытого ключа на сервер\n    try {\n      const response = await fetch('http://localhost:5000/generate_key', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          publicKey: {\n            e: e.toString(),\n            n: n.toString()\n          }\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Ошибка при отправке ключа');\n      }\n      const result = await response.json();\n      console.log('Ответ сервера:', result);\n      console.log(Up(result.public.chipher, d, n));\n    } catch (error) {\n      console.error('Ошибка:', error);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0413\\u0435\\u043D\\u0435\\u0440\\u0430\\u0442\\u043E\\u0440 \\u043A\\u043B\\u044E\\u0447\\u0435\\u0439 RSA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateKeys,\n      disabled: loading,\n      children: loading ? 'Генерация...' : 'Сгенерировать ключи'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u043B\\u0443\\u0447\\u0430\\u0439\\u043D\\u044B\\u0435 \\u043F\\u0440\\u043E\\u0441\\u0442\\u044B\\u0435 \\u0447\\u0438\\u0441\\u043B\\u0430:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"p: \", p.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"q: \", q.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041F\\u0443\\u0431\\u043B\\u0438\\u0447\\u043D\\u044B\\u0439 \\u043A\\u043B\\u044E\\u0447:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: publicKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041F\\u0440\\u0438\\u0432\\u0430\\u0442\\u043D\\u044B\\u0439 \\u043A\\u043B\\u044E\\u0447:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: privateKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"YY5EK6m2cmYmtcdQxVHdqJ1taOA=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Up\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","isPrime","n","i","Math","sqrt","Number","BigInt","Up","base","exponent","modulus","result","_c","getRandomNumber","min","max","floor","random","extendedGCD","a","b","gcd","x1","y1","x","y","modInverse","m","Error","getRandomE","phi","e","App","_s","p","setP","q","setQ","publicKey","setPublicKey","privateKey","setPrivateKey","loading","setLoading","handleGenerateKeys","pValue","qValue","d","response","fetch","method","headers","body","JSON","stringify","toString","ok","json","console","log","public","chipher","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c2","$RefreshReg$"],"sources":["C:/Users/krasy/OneDrive/Рабочий стол/Криптографические протоколы/str/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction isPrime(n) {\n    if (n <= 1) {\n        return false;\n    }\n    for (let i = 2; i <= Math.sqrt(Number(n)); i++) {\n        if (n % BigInt(i) === 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction Up(base, exponent, modulus) {\n    base = base % modulus;\n    let result = BigInt(1);\n\n    while (exponent > 0) {\n        if (exponent % BigInt(2) === BigInt(1)) {\n            result = (result * base) % modulus;\n        }\n        base = (base * base) % modulus;\n        exponent = exponent / BigInt(2);\n    }\n\n    return result;\n}\n\nfunction getRandomNumber(min, max) {\n    return BigInt(Math.floor(Math.random() * (max - min + 1)) + min);\n}\n\n// Функция для нахождения расширенного НОД\nfunction extendedGCD(a, b) {\n    if (b === BigInt(0)) {\n        return [a, BigInt(1), BigInt(0)];\n    }\n    const [gcd, x1, y1] = extendedGCD(b, a % b);\n    const x = y1;\n    const y = x1 - (a / b) * y1;\n    return [gcd, x, y];\n}\n\n// Функция для нахождения обратного элемента\nfunction modInverse(a, m) {\n    const [gcd, x, y] = extendedGCD(a, m);\n    if (gcd !== BigInt(1)) {\n        throw new Error(\"Обратный элемент не существует\");\n    }\n    return (x % m + m) % m;\n}\n\n// Функция для случайного выбора e\nfunction getRandomE(phi) {\n    let e;\n    do {\n        e = getRandomNumber(BigInt(2), phi - BigInt(1));\n    } while (extendedGCD(e, phi)[0] !== BigInt(1)); // Убедимся, что e и phi взаимно просты\n    return e;\n}\n\nconst App = () => {\n    const [p, setP] = useState(BigInt(0));\n    const [q, setQ] = useState(BigInt(0));\n    const [publicKey, setPublicKey] = useState('');\n    const [privateKey, setPrivateKey] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const handleGenerateKeys = async () => {\n        setLoading(true);\n        let pValue = BigInt(0);\n        while (!isPrime(pValue)) {\n            pValue = getRandomNumber(BigInt(2) ** BigInt(127), BigInt(2) ** BigInt(128) - BigInt(1)); // Генерация 128-битного простого числа\n        }\n        let qValue = BigInt(0);\n        while (!isPrime(qValue) || pValue === qValue) {\n            qValue = getRandomNumber(BigInt(2) ** BigInt(127), BigInt(2) ** BigInt(128) - BigInt(1));\n        }\n\n        const n = pValue * qValue;\n        const phi = (pValue - BigInt(1)) * (qValue - BigInt(1));\n        const e = getRandomE(phi); // Случайный выбор e\n        const d = modInverse(e, phi);\n\n        setP(pValue);\n        setQ(qValue);\n        setPublicKey(`(${e}, ${n})`); // Открытый ключ: (e, n)\n        setPrivateKey(`(${d}, ${n})`); // Закрытый ключ: (d, n)\n\n        // Отправка открытого ключа на сервер\n        try {\n            const response = await fetch('http://localhost:5000/generate_key', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ publicKey: { e: e.toString(), n: n.toString() } }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Ошибка при отправке ключа');\n            }\n\n            const result = await response.json();\n            console.log('Ответ сервера:', result);\n            console.log(Up(result.public.chipher, d, n));\n        } catch (error) {\n            console.error('Ошибка:', error);\n        }\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <h1>Генератор ключей RSA</h1>\n            <button onClick={handleGenerateKeys} disabled={loading}>\n                {loading ? 'Генерация...' : 'Сгенерировать ключи'}\n            </button>\n            <h2>Случайные простые числа:</h2>\n            <p>p: {p.toString()}</p>\n            <p>q: {q.toString()}</p>\n            <h2>Публичный ключ:</h2>\n            <p>{publicKey}</p>\n            <h2>Приватный ключ:</h2>\n            <p>{privateKey}</p>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}