{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function isPrime(n){if(n<=1){return false;}for(let i=2;i<=Math.sqrt(n);i++){if(n%i===0){return false;}}return true;}function getRandomNumber(min,max){return Math.floor(Math.random()*(max-min+1))+min;}// Функция для нахождения расширенного НОД\nfunction extendedGCD(a,b){if(b===0){return[a,1,0];}const[gcd,x1,y1]=extendedGCD(b,a%b);const x=y1;const y=x1-Math.floor(a/b)*y1;return[gcd,x,y];}// Функция для нахождения обратного элемента\nfunction modInverse(a,m){const[gcd,x,y]=extendedGCD(a,m);if(gcd!==1){throw new Error(\"Обратный элемент не существует\");}return(x%m+m)%m;}// Функция для случайного выбора e\nfunction getRandomE(phi){let e;do{e=getRandomNumber(2,phi-1);}while(extendedGCD(e,phi)[0]!==1);// Убедимся, что e и phi взаимно просты\nreturn e;}const App=()=>{const[p,setP]=useState(0);const[q,setQ]=useState(0);const[publicKey,setPublicKey]=useState('');const[privateKey,setPrivateKey]=useState('');const[loading,setLoading]=useState(false);const handleGenerateKeys=async()=>{setLoading(true);let pValue=0;while(!isPrime(pValue)){pValue=getRandomNumber(1,100);// Уменьшил диапазон для простоты\n}let qValue=0;while(!isPrime(qValue)||pValue===qValue){// Убедимся, что p и q разные\nqValue=getRandomNumber(1,100);}const n=pValue*qValue;const phi=(pValue-1)*(qValue-1);const e=getRandomE(phi);// Случайный выбор e\nconst d=modInverse(e,phi);setP(pValue);setQ(qValue);setPublicKey(`(${e}, ${n})`);// Открытый ключ: (e, n)\nsetPrivateKey(`(${d}, ${n})`);// Закрытый ключ: (d, n)\n// Отправка открытого ключа на сервер\ntry{const response=await fetch('connect.php',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({publicKey:{e,n}})});if(!response.ok){throw new Error('Ошибка при отправке ключа');}const result=await response.json();console.log('Ответ сервера:',result);}catch(error){console.error('Ошибка:',error);}setLoading(false);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u0413\\u0435\\u043D\\u0435\\u0440\\u0430\\u0442\\u043E\\u0440 \\u043A\\u043B\\u044E\\u0447\\u0435\\u0439 RSA\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleGenerateKeys,disabled:loading,children:loading?'Генерация...':'Сгенерировать ключи'}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\u0421\\u043B\\u0443\\u0447\\u0430\\u0439\\u043D\\u044B\\u0435 \\u043F\\u0440\\u043E\\u0441\\u0442\\u044B\\u0435 \\u0447\\u0438\\u0441\\u043B\\u0430:\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"p: \",p]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"q: \",q]}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\u041F\\u0443\\u0431\\u043B\\u0438\\u0447\\u043D\\u044B\\u0439 \\u043A\\u043B\\u044E\\u0447:\"}),/*#__PURE__*/_jsx(\"p\",{children:publicKey}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\u041F\\u0440\\u0438\\u0432\\u0430\\u0442\\u043D\\u044B\\u0439 \\u043A\\u043B\\u044E\\u0447:\"}),/*#__PURE__*/_jsx(\"p\",{children:privateKey})]});};export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","isPrime","n","i","Math","sqrt","getRandomNumber","min","max","floor","random","extendedGCD","a","b","gcd","x1","y1","x","y","modInverse","m","Error","getRandomE","phi","e","App","p","setP","q","setQ","publicKey","setPublicKey","privateKey","setPrivateKey","loading","setLoading","handleGenerateKeys","pValue","qValue","d","response","fetch","method","headers","body","JSON","stringify","ok","result","json","console","log","error","children","onClick","disabled"],"sources":["C:/Users/krasy/OneDrive/Рабочий стол/Криптографические протоколы/str/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction isPrime(n) {\n    if (n <= 1) {\n        return false;\n    }\n    for (let i = 2; i <= Math.sqrt(n); i++) {\n        if (n % i === 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getRandomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n// Функция для нахождения расширенного НОД\nfunction extendedGCD(a, b) {\n    if (b === 0) {\n        return [a, 1, 0];\n    }\n    const [gcd, x1, y1] = extendedGCD(b, a % b);\n    const x = y1;\n    const y = x1 - Math.floor(a / b) * y1;\n    return [gcd, x, y];\n}\n\n// Функция для нахождения обратного элемента\nfunction modInverse(a, m) {\n    const [gcd, x, y] = extendedGCD(a, m);\n    if (gcd !== 1) {\n        throw new Error(\"Обратный элемент не существует\");\n    }\n    return (x % m + m) % m;\n}\n\n// Функция для случайного выбора e\nfunction getRandomE(phi) {\n    let e;\n    do {\n        e = getRandomNumber(2, phi - 1);\n    } while (extendedGCD(e, phi)[0] !== 1); // Убедимся, что e и phi взаимно просты\n    return e;\n}\n\nconst App = () => {\n    const [p, setP] = useState(0);\n    const [q, setQ] = useState(0);\n    const [publicKey, setPublicKey] = useState('');\n    const [privateKey, setPrivateKey] = useState('');\n    const [loading, setLoading] = useState(false);\n    const handleGenerateKeys = async () => {\n      setLoading(true);\n      let pValue = 0;\n      while (!isPrime(pValue)) {\n          pValue = getRandomNumber(1, 100); // Уменьшил диапазон для простоты\n      }\n      let qValue = 0;\n      while (!isPrime(qValue) || pValue === qValue) { // Убедимся, что p и q разные\n          qValue = getRandomNumber(1, 100);\n      }\n  \n      const n = pValue * qValue;\n      const phi = (pValue - 1) * (qValue - 1);\n      const e = getRandomE(phi); // Случайный выбор e\n      const d = modInverse(e, phi);\n  \n      setP(pValue);\n      setQ(qValue);\n      setPublicKey(`(${e}, ${n})`); // Открытый ключ: (e, n)\n      setPrivateKey(`(${d}, ${n})`); // Закрытый ключ: (d, n)\n  \n      // Отправка открытого ключа на сервер\n      try {\n          const response = await fetch('connect.php', {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({ publicKey: { e, n } }),\n          });\n  \n          if (!response.ok) {\n              throw new Error('Ошибка при отправке ключа');\n          }\n  \n          const result = await response.json();\n          console.log('Ответ сервера:', result);\n      } catch (error) {\n          console.error('Ошибка:', error);\n      }\n  \n      setLoading(false);\n  };\n  \n    return (\n        <div>\n            <h1>Генератор ключей RSA</h1>\n            <button onClick={handleGenerateKeys} disabled={loading}>\n                {loading ? 'Генерация...' : 'Сгенерировать ключи'}\n            </button>\n            <h2>Случайные простые числа:</h2>\n            <p>p: {p}</p>\n            <p>q: {q}</p>\n            <h2>Публичный ключ:</h2>\n            <p>{publicKey}</p>\n            <h2>Приватный ключ:</h2>\n            <p>{privateKey}</p>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}