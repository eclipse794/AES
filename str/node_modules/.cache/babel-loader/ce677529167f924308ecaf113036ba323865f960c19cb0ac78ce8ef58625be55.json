{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krasy\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u041A\\u0440\\u0438\\u043F\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0442\\u043E\\u043A\\u043E\\u043B\\u044B\\\\str\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction isPrime(n) {\n  if (n <= 1) {\n    return false;\n  }\n  for (let i = 2; i <= Math.sqrt(n); i++) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getRandomNumber(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n// Функция для нахождения расширенного НОД\nfunction extendedGCD(a, b) {\n  if (b === 0) {\n    return [a, 1, 0];\n  }\n  const [gcd, x1, y1] = extendedGCD(b, a % b);\n  const x = y1;\n  const y = x1 - Math.floor(a / b) * y1;\n  return [gcd, x, y];\n}\n\n// Функция для нахождения обратного элемента\nfunction modInverse(a, m) {\n  const [gcd, x, y] = extendedGCD(a, m);\n  if (gcd !== 1) {\n    throw new Error(\"Обратный элемент не существует\");\n  }\n  return (x % m + m) % m;\n}\n\n// Функция для случайного выбора e\nfunction getRandomE(phi) {\n  let e;\n  do {\n    e = getRandomNumber(2, phi - 1);\n  } while (extendedGCD(e, phi)[0] !== 1); // Убедимся, что e и phi взаимно просты\n  return e;\n}\nconst App = () => {\n  _s();\n  const [p, setP] = useState(0);\n  const [q, setQ] = useState(0);\n  const [publicKey, setPublicKey] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleGenerateKeys = async () => {\n    setLoading(true);\n    let pValue = 0;\n    while (!isPrime(pValue)) {\n      pValue = getRandomNumber(1, 100000000000); // Уменьшил диапазон для простоты\n    }\n    let qValue = 0;\n    while (!isPrime(qValue) || pValue === qValue) {\n      // Убедимся, что p и q разные\n      qValue = getRandomNumber(1, 100000000000);\n    }\n    const n = pValue * qValue;\n    const phi = (pValue - 1) * (qValue - 1);\n    const e = getRandomE(phi); // Случайный выбор e\n    const d = modInverse(e, phi);\n    setP(pValue);\n    setQ(qValue);\n    setPublicKey(`(${e}, ${n})`); // Открытый ключ: (e, n)\n    setPrivateKey(`(${d}, ${n})`); // Закрытый ключ: (d, n)\n\n    // Отправка открытого ключа на сервер\n    try {\n      const response = await fetch('http://localhost/connect.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          publicKey: {\n            e,\n            n\n          }\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Ошибка при отправке ключа');\n      }\n      const result = await response.json();\n      console.log('Ответ сервера:', result.publicKey.chipher);\n    } catch (error) {\n      console.error('Ошибка:', error);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0413\\u0435\\u043D\\u0435\\u0440\\u0430\\u0442\\u043E\\u0440 \\u043A\\u043B\\u044E\\u0447\\u0435\\u0439 RSA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateKeys,\n      disabled: loading,\n      children: loading ? 'Генерация...' : 'Сгенерировать ключи'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u043B\\u0443\\u0447\\u0430\\u0439\\u043D\\u044B\\u0435 \\u043F\\u0440\\u043E\\u0441\\u0442\\u044B\\u0435 \\u0447\\u0438\\u0441\\u043B\\u0430:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"p: \", p]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"q: \", q]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041F\\u0443\\u0431\\u043B\\u0438\\u0447\\u043D\\u044B\\u0439 \\u043A\\u043B\\u044E\\u0447:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: publicKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041F\\u0440\\u0438\\u0432\\u0430\\u0442\\u043D\\u044B\\u0439 \\u043A\\u043B\\u044E\\u0447:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: privateKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"IeNtLuMkFZuDAyoVHTCLh3viDkc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","isPrime","n","i","Math","sqrt","getRandomNumber","min","max","floor","random","extendedGCD","a","b","gcd","x1","y1","x","y","modInverse","m","Error","getRandomE","phi","e","App","_s","p","setP","q","setQ","publicKey","setPublicKey","privateKey","setPrivateKey","loading","setLoading","handleGenerateKeys","pValue","qValue","d","response","fetch","method","headers","body","JSON","stringify","ok","result","json","console","log","chipher","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/krasy/OneDrive/Рабочий стол/Криптографические протоколы/str/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction isPrime(n) {\n    if (n <= 1) {\n        return false;\n    }\n    for (let i = 2; i <= Math.sqrt(n); i++) {\n        if (n % i === 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getRandomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n// Функция для нахождения расширенного НОД\nfunction extendedGCD(a, b) {\n    if (b === 0) {\n        return [a, 1, 0];\n    }\n    const [gcd, x1, y1] = extendedGCD(b, a % b);\n    const x = y1;\n    const y = x1 - Math.floor(a / b) * y1;\n    return [gcd, x, y];\n}\n\n// Функция для нахождения обратного элемента\nfunction modInverse(a, m) {\n    const [gcd, x, y] = extendedGCD(a, m);\n    if (gcd !== 1) {\n        throw new Error(\"Обратный элемент не существует\");\n    }\n    return (x % m + m) % m;\n}\n\n// Функция для случайного выбора e\nfunction getRandomE(phi) {\n    let e;\n    do {\n        e = getRandomNumber(2, phi - 1);\n    } while (extendedGCD(e, phi)[0] !== 1); // Убедимся, что e и phi взаимно просты\n    return e;\n}\n\nconst App = () => {\n    const [p, setP] = useState(0);\n    const [q, setQ] = useState(0);\n    const [publicKey, setPublicKey] = useState('');\n    const [privateKey, setPrivateKey] = useState('');\n    const [loading, setLoading] = useState(false);\n    const handleGenerateKeys = async () => {\n      setLoading(true);\n      let pValue = 0;\n      while (!isPrime(pValue)) {\n          pValue = getRandomNumber(1, 100000000000); // Уменьшил диапазон для простоты\n      }\n      let qValue = 0;\n      while (!isPrime(qValue) || pValue === qValue) { // Убедимся, что p и q разные\n          qValue = getRandomNumber(1, 100000000000);\n      }\n  \n      const n = pValue * qValue;\n      const phi = (pValue - 1) * (qValue - 1);\n      const e = getRandomE(phi); // Случайный выбор e\n      const d = modInverse(e, phi);\n  \n      setP(pValue);\n      setQ(qValue);\n      setPublicKey(`(${e}, ${n})`); // Открытый ключ: (e, n)\n      setPrivateKey(`(${d}, ${n})`); // Закрытый ключ: (d, n)\n  \n      // Отправка открытого ключа на сервер\n      try {\n          const response = await fetch('http://localhost/connect.php', {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({ publicKey: { e, n } }),\n          });\n  \n          if (!response.ok) {\n              throw new Error('Ошибка при отправке ключа');\n          }\n  \n          const result = await response.json();\n          console.log('Ответ сервера:', result.publicKey.chipher);\n      } catch (error) {\n          console.error('Ошибка:', error);\n      }\n  \n      setLoading(false);\n  };\n  \n    return (\n        <div>\n            <h1>Генератор ключей RSA</h1>\n            <button onClick={handleGenerateKeys} disabled={loading}>\n                {loading ? 'Генерация...' : 'Сгенерировать ключи'}\n            </button>\n            <h2>Случайные простые числа:</h2>\n            <p>p: {p}</p>\n            <p>q: {q}</p>\n            <h2>Публичный ключ:</h2>\n            <p>{publicKey}</p>\n            <h2>Приватный ключ:</h2>\n            <p>{privateKey}</p>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}