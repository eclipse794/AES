{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krasy\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u041A\\u0440\\u0438\\u043F\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0442\\u043E\\u043A\\u043E\\u043B\\u044B\\\\str\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isPrime = n => {\n  if (n <= 1) return false;\n  if (n <= 3) return true;\n  if (n % 2 === 0) return false;\n  for (let i = 3; i * i <= n; i += 2) {\n    if (n % i === 0) return false;\n  }\n  return true;\n};\nconst getRandomInt = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nconst getRandomPrime = () => {\n  let num;\n  do {\n    num = getRandomInt(1, 1000000); // Уменьшили диапазон\n  } while (!isPrime(num));\n  return num;\n};\nconst App = () => {\n  _s();\n  const [p, setP] = useState(0);\n  const [q, setQ] = useState(0);\n  const [publicKey, setPublicKey] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n  const generateKeys = () => {\n    const pValue = getRandomPrime();\n    const qValue = getRandomPrime();\n    setP(pValue);\n    setQ(qValue);\n\n    // Вычисление n = p * q\n    const n = pValue * qValue;\n\n    // Вычисление φ(n) = (p-1) * (q-1)\n    const phi = (pValue - 1) * (qValue - 1);\n\n    // Генерация публичного и приватного ключей (для простоты, пусть e = 3)\n    const e = 3;\n    let d = 0;\n\n    // Находим d так, чтобы (d * e) mod φ(n) = 1\n    for (let i = 1;; i++) {\n      if (e * i % phi === 1) {\n        d = i;\n        break;\n      }\n    }\n    setPublicKey(`(${e}, ${n})`); // Публичный ключ\n    setPrivateKey(`(${d}, ${n})`); // Приватный ключ\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0413\\u0435\\u043D\\u0435\\u0440\\u0430\\u0442\\u043E\\u0440 \\u043A\\u043B\\u044E\\u0447\\u0435\\u0439 RSA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateKeys,\n      children: \"\\u0421\\u0433\\u0435\\u043D\\u0435\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043A\\u043B\\u044E\\u0447\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u043B\\u0443\\u0447\\u0430\\u0439\\u043D\\u044B\\u0435 \\u043F\\u0440\\u043E\\u0441\\u0442\\u044B\\u0435 \\u0447\\u0438\\u0441\\u043B\\u0430:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"p: \", p]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"q: \", q]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041F\\u0443\\u0431\\u043B\\u0438\\u0447\\u043D\\u044B\\u0439 \\u043A\\u043B\\u044E\\u0447:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: publicKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041F\\u0440\\u0438\\u0432\\u0430\\u0442\\u043D\\u044B\\u0439 \\u043A\\u043B\\u044E\\u0447:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: privateKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"wgPnNUzHtxwbWfcv6ykqUcwF4LU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","isPrime","n","i","getRandomInt","min","max","Math","floor","random","getRandomPrime","num","App","_s","p","setP","q","setQ","publicKey","setPublicKey","privateKey","setPrivateKey","generateKeys","pValue","qValue","phi","e","d","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/krasy/OneDrive/Рабочий стол/Криптографические протоколы/str/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst isPrime = (n) => {\n    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 === 0) return false;\n\n    for (let i = 3; i * i <= n; i += 2) {\n        if (n % i === 0) return false;\n    }\n    return true;\n};\n\nconst getRandomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst getRandomPrime = () => {\n    let num;\n    do {\n        num = getRandomInt(1, 1000000); // Уменьшили диапазон\n    } while (!isPrime(num));\n    return num;\n};\n\nconst App = () => {\n    const [p, setP] = useState(0);\n    const [q, setQ] = useState(0);\n    const [publicKey, setPublicKey] = useState('');\n    const [privateKey, setPrivateKey] = useState('');\n\n    const generateKeys = () => {\n        const pValue = getRandomPrime();\n        const qValue = getRandomPrime();\n        setP(pValue);\n        setQ(qValue);\n\n        // Вычисление n = p * q\n        const n = pValue * qValue;\n\n        // Вычисление φ(n) = (p-1) * (q-1)\n        const phi = (pValue - 1) * (qValue - 1);\n\n        // Генерация публичного и приватного ключей (для простоты, пусть e = 3)\n        const e = 3;\n        let d = 0;\n\n        // Находим d так, чтобы (d * e) mod φ(n) = 1\n        for (let i = 1; ; i++) {\n            if ((e * i) % phi === 1) {\n                d = i;\n                break;\n            }\n        }\n\n        setPublicKey(`(${e}, ${n})`); // Публичный ключ\n        setPrivateKey(`(${d}, ${n})`); // Приватный ключ\n    };\n\n    return (\n        <div>\n            <h1>Генератор ключей RSA</h1>\n            <button onClick={generateKeys}>Сгенерировать ключи</button>\n            <h2>Случайные простые числа:</h2>\n            <p>p: {p}</p>\n            <p>q: {q}</p>\n            <h2>Публичный ключ:</h2>\n            <p>{publicKey}</p>\n            <h2>Приватный ключ:</h2>\n            <p>{privateKey}</p>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}