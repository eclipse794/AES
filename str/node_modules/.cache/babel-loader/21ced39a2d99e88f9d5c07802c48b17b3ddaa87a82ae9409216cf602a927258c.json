{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krasy\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u041A\\u0440\\u0438\\u043F\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0442\\u043E\\u043A\\u043E\\u043B\\u044B\\\\str\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction isPrime(n) {\n  if (n <= 1) {\n    return false;\n  }\n  for (let i = 2; i <= Math.sqrt(n); i++) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Функция для генерации случайного простого числа\nfunction generateRandomPrime(bits) {\n  const min = BigInt(2) ** BigInt(bits - 1);\n  const max = BigInt(2) ** BigInt(bits) - BigInt(1);\n  let prime = BigInt(0);\n  while (!isPrime(prime)) {\n    // Генерация случайного числа\n    prime = BigInt.asUintN(bits, BigInt(Math.floor(Math.random() * Number(max))) + BigInt(1));\n  }\n  return prime;\n}\n\n// Функция для нахождения расширенного НОД\nfunction extendedGCD(a, b) {\n  if (b === 0) {\n    return [a, 1, 0];\n  }\n  const [gcd, x1, y1] = extendedGCD(b, a % b);\n  const x = y1;\n  const y = x1 - Math.floor(a / b) * y1;\n  return [gcd, x, y];\n}\n\n// Функция для нахождения обратного элемента\nfunction modInverse(a, m) {\n  const [gcd, x, y] = extendedGCD(a, m);\n  if (gcd !== 1) {\n    throw new Error(\"Обратный элемент не существует\");\n  }\n  return (x % m + m) % m;\n}\n\n// Функция для случайного выбора e\nfunction getRandomE(phi) {\n  let e;\n  do {\n    e = getRandomNumber(2, phi - 1);\n  } while (extendedGCD(e, phi)[0] !== 1);\n  return e;\n}\nconst App = () => {\n  _s();\n  const [p, setP] = useState(0);\n  const [q, setQ] = useState(0);\n  const [publicKey, setPublicKey] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleGenerateKeys = async () => {\n    setLoading(true);\n    const pValue = generateRandomPrime(2048);\n    let qValue;\n    do {\n      qValue = generateRandomPrime(2048);\n    } while (pValue === qValue); // Убедимся, что p и q разные\n\n    const n = pValue * qValue;\n    const phi = (pValue - 1n) * (qValue - 1n);\n    const e = 65537n; // Выбираем фиксированное значение e\n    const d = modInverse(e, phi);\n    setP(pValue);\n    setQ(qValue);\n    setPublicKey(`(${e}, ${n})`); // Открытый ключ: (e, n)\n    setPrivateKey(`(${d}, ${n})`); // Закрытый ключ: (d, n)\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0413\\u0435\\u043D\\u0435\\u0440\\u0430\\u0442\\u043E\\u0440 \\u043A\\u043B\\u044E\\u0447\\u0435\\u0439 RSA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateKeys,\n      disabled: loading,\n      children: loading ? 'Генерация...' : 'Сгенерировать ключи'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u043B\\u0443\\u0447\\u0430\\u0439\\u043D\\u044B\\u0435 \\u043F\\u0440\\u043E\\u0441\\u0442\\u044B\\u0435 \\u0447\\u0438\\u0441\\u043B\\u0430:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"p: \", p.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"q: \", q.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041F\\u0443\\u0431\\u043B\\u0438\\u0447\\u043D\\u044B\\u0439 \\u043A\\u043B\\u044E\\u0447:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: publicKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041F\\u0440\\u0438\\u0432\\u0430\\u0442\\u043D\\u044B\\u0439 \\u043A\\u043B\\u044E\\u0447:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: privateKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"IeNtLuMkFZuDAyoVHTCLh3viDkc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","isPrime","n","i","Math","sqrt","generateRandomPrime","bits","min","BigInt","max","prime","asUintN","floor","random","Number","extendedGCD","a","b","gcd","x1","y1","x","y","modInverse","m","Error","getRandomE","phi","e","getRandomNumber","App","_s","p","setP","q","setQ","publicKey","setPublicKey","privateKey","setPrivateKey","loading","setLoading","handleGenerateKeys","pValue","qValue","d","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","toString","_c","$RefreshReg$"],"sources":["C:/Users/krasy/OneDrive/Рабочий стол/Криптографические протоколы/str/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction isPrime(n) {\n    if (n <= 1) {\n        return false;\n    }\n    for (let i = 2; i <= Math.sqrt(n); i++) {\n        if (n % i === 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// Функция для генерации случайного простого числа\nfunction generateRandomPrime(bits) {\n    const min = BigInt(2) ** BigInt(bits - 1);\n    const max = BigInt(2) ** BigInt(bits) - BigInt(1);\n    let prime = BigInt(0);\n    \n    while (!isPrime(prime)) {\n        // Генерация случайного числа\n        prime = BigInt.asUintN(bits, BigInt(Math.floor(Math.random() * Number(max))) + BigInt(1));\n    }\n    \n    return prime;\n}\n\n// Функция для нахождения расширенного НОД\nfunction extendedGCD(a, b) {\n    if (b === 0) {\n        return [a, 1, 0];\n    }\n    const [gcd, x1, y1] = extendedGCD(b, a % b);\n    const x = y1;\n    const y = x1 - Math.floor(a / b) * y1;\n    return [gcd, x, y];\n}\n\n// Функция для нахождения обратного элемента\nfunction modInverse(a, m) {\n    const [gcd, x, y] = extendedGCD(a, m);\n    if (gcd !== 1) {\n        throw new Error(\"Обратный элемент не существует\");\n    }\n    return (x % m + m) % m;\n}\n\n// Функция для случайного выбора e\nfunction getRandomE(phi) {\n    let e;\n    do {\n        e = getRandomNumber(2, phi - 1);\n    } while (extendedGCD(e, phi)[0] !== 1);\n    return e;\n}\n\nconst App = () => {\n    const [p, setP] = useState(0);\n    const [q, setQ] = useState(0);\n    const [publicKey, setPublicKey] = useState('');\n    const [privateKey, setPrivateKey] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const handleGenerateKeys = async () => {\n        setLoading(true);\n        const pValue = generateRandomPrime(2048);\n        let qValue;\n        do {\n            qValue = generateRandomPrime(2048);\n        } while (pValue === qValue); // Убедимся, что p и q разные\n\n        const n = pValue * qValue;\n        const phi = (pValue - 1n) * (qValue - 1n);\n        const e = 65537n; // Выбираем фиксированное значение e\n        const d = modInverse(e, phi);\n\n        setP(pValue);\n        setQ(qValue);\n        setPublicKey(`(${e}, ${n})`); // Открытый ключ: (e, n)\n        setPrivateKey(`(${d}, ${n})`); // Закрытый ключ: (d, n)\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <h1>Генератор ключей RSA</h1>\n            <button onClick={handleGenerateKeys} disabled={loading}>\n                {loading ? 'Генерация...' : 'Сгенерировать ключи'}\n            </button>\n            <h2>Случайные простые числа:</h2>\n            <p>p: {p.toString()}</p>\n            <p>q: {q.toString()}</p>\n            <h2>Публичный ключ:</h2>\n            <p>{publicKey}</p>\n            <h2>Приватный ключ:</h2>\n            <p>{privateKey}</p>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}